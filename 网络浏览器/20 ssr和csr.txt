客户端渲染
前端做视图和交互，后端只提供接口数据，前端通过ajax向服务端请求数据，获取到数据后通过js生成DOM插入HTML页面，最终渲染给用户。
页面代码在浏览器源代码中看不到。

客户端渲染优点：
使得服务器计算压力变轻
做到了前后端分离，在团队开发中只要负责各自的任务即可，使开发效率有明显提升。


客户端渲染缺点：
不利于SEO、搜索引擎爬虫看不到完整的程序源码
请求增多时用户等待时间变长，导致首屏渲染慢
消耗的是用户浏览器的性能


服务端渲染
服务端在返回html之前，在特定的区域，符号里用数据填充生成html，再发送给客户端html，客户端解析html最终渲染出页面给用户，
页面代码在浏览器源代码中看得到。
服务端渲染优点：

响应快，用户体验好，首屏渲染快
对搜索引擎友好，搜索引擎爬虫可以看到完整的程序源码，有利于SEO

服务端渲染缺点：（首屏加载快和有利于seo）
增加了服务器的计算压力，消耗服务器性能
不容易维护，如果不使用node中间层，前后端分工不明，不能进行良好的并行开发


两种渲染对比:
本质上两种渲染都是一样的，都是进行的字符串拼接生成html,两者的差别最终体现在时间消耗以及性能消耗上。
客户端在不同网络环境下进行数据请求，客户端需要经历从js加载完成到数据请求再到页面渲染这个时间段。
导致了大量时间的消耗以及浏览器性能的消耗。而服务端在内网请求，数据响应快，不需要等待js代码加载，
可以先请求数据再渲染可视部分然后返回给客户端，客户端再做二次渲染,这样大部分消耗的是服务端的性能。客户端页面响应时间也更快。

链接：https://juejin.cn/post/6844903959241424910
